{"version":3,"sources":["components/common/utils/useForm.tsx","components/common/utils/validationRules.ts","components/Block/styles.ts","components/Block/index.tsx","components/common/Input/styles.ts","components/common/TextArea/styles.tsx","components/common/Input/index.tsx","components/common/TextArea/index.tsx","components/ContactForm/styles.ts","components/ContactForm/index.tsx","components/common/Button/styles.ts","components/common/Button/index.tsx"],"names":["useForm","validate","_useState","useState","_useState2","Object","slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","shouldSubmit","setShouldSubmit","useEffect","keys","length","notification","message","description","handleChange","event","persist","objectSpread","defineProperty","target","name","value","handleSubmit","preventDefault","axios","post","then","email","test","Content","styled","_templateObject","taggedTemplateLiteral","Container","_templateObject2","TextWrapper","_templateObject3","withTranslation","_ref","title","content","t","react_default","a","createElement","styles_templateObject","StyledInput","styles_templateObject2","StyledContainer","TextArea_styles_templateObject","StyledTextArea","TextArea_styles_templateObject2","Label","styles_templateObject3","placeholder","onChange","styles_Container","htmlFor","id","ContactContainer","ContactForm_styles_templateObject","FormGroup","ContactForm_styles_templateObject2","Span","ContactForm_styles_templateObject3","ButtonContainer","_templateObject4","_ref2","ValidationType","_ref3","type","ErrorMessage","react_awesome_reveal_esm","direction","erros","row","justify","align","col","lg","md","sm","xs","components_Block","autoComplete","onSubmit","span","common_Input","common_TextArea","Button","StyledButton","p","color","__webpack_require__","d","__webpack_exports__","Button_Button","fixedWidth","children","onClick"],"mappings":"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","file":"static/js/5.b0890257.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const useForm = (validate: any) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon();\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleSubmit = (event:any) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChange = (event:any) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n","import { validateProps } from \"../../common/types\";\r\n\r\nexport default function validate(values: validateProps) {\r\n  let errors = {} as validateProps;\r\n\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import React from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: any;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import React from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledInput\r\n      placeholder={t(placeholder)}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default withTranslation()(Input);\r\n","import React from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { StyledTextArea, StyledContainer, Label } from \"./styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst TextArea = ({ name, placeholder, onChange, t }: InputProps) => (\r\n  <StyledContainer>\r\n    <Label htmlFor={name}>{t(name)}</Label>\r\n    <StyledTextArea\r\n      placeholder={t(placeholder)}\r\n      id={name}\r\n      name={name}\r\n      onChange={onChange}\r\n    />\r\n  </StyledContainer>\r\n);\r\n\r\nexport default withTranslation()(TextArea);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport { ContactProps, ValidationTypeProps } from \"./types\";\r\nimport { useForm } from \"../../components/common/utils/useForm\";\r\nimport validate from \"../../components/common/utils/validationRules\";\r\nimport { Button } from \"../../components/common/Button\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../components/common/Input\";\r\nimport TextArea from \"../../components/common/TextArea\";\r\nimport { ContactContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\n\r\nconst Contact = ({ title, content, id, t }: ContactProps) => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    validate\r\n  ) as any;\r\n\r\n  const ValidationType = ({ type }: ValidationTypeProps) => {\r\n    const ErrorMessage = errors[type];\r\n    return (\r\n      <Zoom direction=\"left\">\r\n        <Span erros={errors[type]}>{ErrorMessage}</Span>\r\n      </Zoom>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ContactContainer id={id}>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\">\r\n            <Block title={title} content={content} />\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"right\">\r\n            <FormGroup autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Your Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={values.email || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <TextArea\r\n                  placeholder=\"Your Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">{t(\"Submit\")}</Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Contact);\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n"],"sourceRoot":""}