{"version":3,"sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/FullContentBlock/styles.ts","components/ContentBlock/FullContentBlock/index.tsx","components/ContentBlock/index.tsx","components/common/Button/styles.ts","components/common/Button/index.tsx"],"names":["LeftContentSection","styled","_templateObject","Object","taggedTemplateLiteral","Content","_templateObject2","ContentWrapper","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","withTranslation","_ref","icon","title","content","section","t","id","picture","react_default","a","createElement","react_awesome_reveal_esm","direction","row","justify","align","col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","key","span","RightBlockContainer","styles_templateObject","styles_templateObject2","styles_templateObject3","ButtonWrapper","styles_templateObject4","button","styles_ContentWrapper","styles_Content","Button","color","fixedWidth","onClick","document","getElementById","scrollIntoView","behavior","FullBlockContainer","FullContentBlock_styles_templateObject","props","image","Heading","FullContentBlock_styles_templateObject2","FullContentBlock_styles_templateObject3","FullContentBlock_styles_templateObject4","styles_templateObject5","FullContentBlock_styles_ContentWrapper","FullContentBlock_styles_Content","styles_ButtonWrapper","styles","ContentBlock","type","ContentBlock_LeftContentBlock","RightContentBlock","FullContentBlock","StyledButton","p","__webpack_require__","d","__webpack_exports__","Button_Button","children"],"mappings":"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","file":"static/js/2.2fcdf9ed.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  background: rgb(227, 232, 243);\r\n  position: relative;\r\n  padding: 10rem 40px 8rem;\r\n  text-align: center;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import React from 'react';\r\nimport { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../components/common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n  picture\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection id={id}>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {icon && (\r\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n            )}\r\n            {picture && (\r\n              <img src={picture} width=\"100%\" height=\"100%\" />\r\n            )}\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 40px 8rem;\r\n  text-align: center;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../components/common/SvgIcon\";\r\nimport { Button } from \"../../../components/common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n  picture\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer id={id}>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {icon && (\r\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n            )}\r\n            {picture && (\r\n              <img src={picture} width=\"100%\" height=\"100%\" />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import styled from \"styled-components\";\r\n\r\ninterface StyleProps {\r\n  image?: string;\r\n  minimumheight?:any;\r\n} \r\n\r\nexport const FullBlockContainer = styled.section<StyleProps>`\r\n  position: relative;\r\n  padding: 10rem 40px 8rem;\r\n  text-align: center;\r\n  background-image: url(${props => props.image});\r\n  background-repeat:no-repeat;\r\n  background-size: 1280px 100%;\r\n  -webkit-border-radius: 20px;\r\n  -moz-border-radius: 20px;\r\n  border-radius: 20px;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n\r\n  }\r\n`;\r\n\r\nexport const Heading = styled(\"h6\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  color:#FFFFFF;\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n  color:#FFFFFF;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: center;\r\n  alignItems: 'center',\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../components/common/SvgIcon\";\r\nimport { Button } from \"../../../components/common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  FullBlockContainer,\r\n  Heading,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nimport {CustomYellowButton} from \"../../../styles/styles\";\r\n\r\nconst FullBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n  picture\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <FullBlockContainer id={id} image ={picture}>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\">\r\n          <Col lg={24} md={24} sm={24} xs={24}>\r\n            <ContentWrapper>\r\n              <Heading>{t(title)}</Heading>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <CustomYellowButton\r\n                        key={id}\r\n                        color={item.color}\r\n                        onClick={() => scrollTo(\"about\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </CustomYellowButton>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </FullBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(FullBlock);\r\n","import React from 'react';\r\nimport LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport FullContentBlock from \"./FullContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  if (props.type === \"full\") return <FullContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n"],"sourceRoot":""}